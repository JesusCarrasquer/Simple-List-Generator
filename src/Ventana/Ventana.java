/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Ventana;

import Clases.Ingrediente;
import Gestor.GestorLogico;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JOptionPane;

/**
 *
 * @author alumno
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    GestorLogico gestor;
    
    public Ventana() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }
    
@Override
    public Image getIconImage() {
    Image retValue = Toolkit.getDefaultToolkit().
         getImage(ClassLoader.getSystemResource("Resources/Captura.PNG"));
        return retValue;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        creaLista = new javax.swing.JButton();
        introduceElemento = new javax.swing.JButton();
        borraElemento = new javax.swing.JButton();
        MuestraElementos = new javax.swing.JButton();
        borraLista = new javax.swing.JButton();
        imprimeLista = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        setPreferredSize(new java.awt.Dimension(600, 600));
        setResizable(false);
        setSize(new java.awt.Dimension(600, 600));
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(null);

        creaLista.setText("Crear Una nueva Lista");
        creaLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creaListaActionPerformed(evt);
            }
        });
        jPanel1.add(creaLista);

        introduceElemento.setText("Introducir Elemento");
        introduceElemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                introduceElementoActionPerformed(evt);
            }
        });
        jPanel1.add(introduceElemento);

        borraElemento.setText("Borrar Elemento");
        borraElemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borraElementoActionPerformed(evt);
            }
        });
        jPanel1.add(borraElemento);

        MuestraElementos.setText("Muestra Elementos");
        MuestraElementos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MuestraElementosActionPerformed(evt);
            }
        });
        jPanel1.add(MuestraElementos);

        borraLista.setText("Borrar Lista Actual");
        borraLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borraListaActionPerformed(evt);
            }
        });
        jPanel1.add(borraLista);

        imprimeLista.setText("Imprimir Lista");
        imprimeLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imprimeListaActionPerformed(evt);
            }
        });
        jPanel1.add(imprimeLista);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 280, 560, 70);

        jLabel1.setFont(new java.awt.Font("Eras Bold ITC", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("¡BIENVENID@ AL LISTAMATOR 5000!");
        jLabel1.setToolTipText("");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel1.setAlignmentY(30.0F);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 170, 600, 50);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void creaListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creaListaActionPerformed
        if (gestor != null) {
            if(JOptionPane.showConfirmDialog(this, "¿Estas seguro? Esto borrará todos los datos que tienes hasta ahora") == 0){
                gestor = new GestorLogico();
                JOptionPane.showMessageDialog(this, "Nueva lista creada con éxito");
            }
            else{
                JOptionPane.showMessageDialog(this, "Cancelado con éxito");
            }
        }
        else{
            gestor = new GestorLogico();
            JOptionPane.showMessageDialog(this, "Nueva lista creada con éxito");
        }
    }//GEN-LAST:event_creaListaActionPerformed
    /**
     * Enseña todos los elementos de la lista y pide escribir uno para borrarlo
     * Enseña un mensaje de error en caso de que no se haya creado una lista
     * Al final enseña un mensaje de como ha resultado la operacion
     * @param evt 
     */
    private void borraElementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borraElementoActionPerformed
        if(this.gestor==null){
            JOptionPane.showMessageDialog(this, "No hay ninguna lista creada");
            return;
        }
        JOptionPane.showMessageDialog(this, gestor.borraElemento());
    }//GEN-LAST:event_borraElementoActionPerformed
    /**
     * Imprime la lista actual y genera un documento HTML con esta
     * @param evt 
     */
    private void imprimeListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imprimeListaActionPerformed
        if(this.gestor == null){
            JOptionPane.showMessageDialog(this, "Error, no hay ninguna lista creada");
            return;
        }
        JOptionPane.showMessageDialog(this, gestor.generaHTML());
        
    }//GEN-LAST:event_imprimeListaActionPerformed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed

    }//GEN-LAST:event_formKeyPressed
    /**
     * Muestra la lista actual en un JOptionPane, devuelve un mensaje de error si no hay una lista creada
     * @param evt 
     */
    private void MuestraElementosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MuestraElementosActionPerformed
        if (this.gestor == null) {
            JOptionPane.showMessageDialog(this, "Error, se debe crear una lista primero");
        }
        else{
            JOptionPane.showMessageDialog(this, gestor.devuelveLista());   
        }
    }//GEN-LAST:event_MuestraElementosActionPerformed
    /**
     * Funcion en caso de que se pulse el boton "Introducir Elemento"
     * Comprueba si existe una lista, si existe pide los datos del Elemento y lo añade a la lista
     * @param evt 
     */
    private void introduceElementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_introduceElementoActionPerformed
        if(this.gestor == null){
            JOptionPane.showMessageDialog(this, "Error, tienes que crear una lista primero");
            return;
        }
        String nombre, tipo;
        nombre = JOptionPane.showInputDialog(this,"Introduce el nombre del elemento que quieres añadir");
        int cantidad = pideNum();
        tipo = JOptionPane.showInputDialog(this,"Introduce la unidad que necesitas de " + nombre + " (e.g. mg,g,kg,l,ml...)");
        gestor.introduceElemento(new Ingrediente(nombre,cantidad,tipo));
        JOptionPane.showMessageDialog(this, "Elemento Introducido con éxito");
    }//GEN-LAST:event_introduceElementoActionPerformed

    private void borraListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borraListaActionPerformed
        if (this.gestor == null) {
            JOptionPane.showMessageDialog(this, "No hay ninguna lista creada");
            return;
        }
        this.gestor = null;
        JOptionPane.showMessageDialog(this,"Lista borrada con exito");
    }//GEN-LAST:event_borraListaActionPerformed
    
    /**
     * Pide numeros, se repite en caso de que se introduzca otra cosa
     * @return num
     */
    private int pideNum(){
        String num = JOptionPane.showInputDialog(this, "Introduce la cantidad de ese elemento que quieres");
        boolean exito = false;
        int hola = 0;
        while(!exito){
            try{
                hola = Integer.parseInt(num);
                exito = true;
            }
            catch(java.lang.NumberFormatException e){
                num = JOptionPane.showInputDialog(this, "Debes de Introducir un numero");
            }
        }
        return hola;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton MuestraElementos;
    private javax.swing.JButton borraElemento;
    private javax.swing.JButton borraLista;
    private javax.swing.JButton creaLista;
    private javax.swing.JButton imprimeLista;
    private javax.swing.JButton introduceElemento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
